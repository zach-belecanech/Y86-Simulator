# This program calls a insertBST function twice to insert two
# nodes into an existing binary search tree.
# The parameters to minBST are in %rdi and %rsi. 
# %rdi contains the address of the root node. %rsi contains the
# address of a node to insert.  A node contains three 8-byte
# fields: address of left node, address of right node, value of
# node.
#
# This program isn't for the faint-hearted.
# 
       .pos 0
       irmovq stack, %rsp
       irmovq node0, %rdi
       irmovq newN1, %rsi
       call insertBST
       irmovq node0, %rdi
       irmovq newN2, %rsi
       call insertBST
       halt   
#
insertBST: #address of root node is in %rdi
start:          #address of node to insert is in %rsi
       irmovq $0,%r11                                   #Gives us our Zero constant                             
       mrmovq 16(%rsi),%r9                              #Moves the value of the inserted node to r9
       mrmovq 16(%rdi),%r8                              #Moves the value of the start node to r8
       subq %r8, %r9                                    # newNOde - startNode
       jg right
       mrmovq (%rdi),%r12                               #Moves what is at the address of Rdi into r12
       subq %r12,%r11                                   #sets condition codes to see if we stop or not
       je setL
       rrmovq %r12,%rdi
       jmp start
right: 
       mrmovq 8(%rdi),%r13
       subq %r13,%r11
       je setR
       rrmovq %r13,%rdi
       jmp start
setR:  
       rmmovq %rsi,8(%rdi)
       jmp done
setL:  
       rmmovq %rsi,(%rdi)
       jmp done
done:  
       ret
#
       .pos 0x200
node0: .quad node1    #address of left child
       .quad node2    #address of right child
       .quad 10       #value in the node
node1: .quad node3
       .quad 0 #should be modified to be newNd1 (0x290)
       .quad 4        
node2: .quad node4
       .quad node5
       .quad 15
node3: .quad 0
       .quad 0
       .quad 2       
node4: .quad 0  #should be modified to be newNd2 (0x2a8)
       .quad 0
       .quad 12
node5: .quad 0
       .quad 0
       .quad 20
newN1: .quad 0
       .quad 0
       .quad 5
newN2: .quad 0
       .quad 0
       .quad 11
       .pos 0x400
stack: .quad 0
